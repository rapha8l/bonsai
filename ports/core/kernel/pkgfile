info='the bonsai linux kernel'
version=5.4.17
source=http://mirrors.edge.kernel.org/pub/linux/kernel/v${version%%.*}.x/linux-$version.tar.xz
# note: curses is dep for menuconfig
deps='@stage0 @stage1 @init kmod bison flex posix-bc netbsd-curses'
nolink=true
nostrip=true
sha512=b909cc5fa383ca25496851cd8d0af0efbe1613ee6c3579abb122285fcdcd28f4736fbb26675d741474388a63d1a312cc70a6b0aa8f25c1cd62b9f95b99462628

prebuild() {
    msg 'ensuring that correct build tools are in $PATH'
    for i in bison flex posix-bc ; do
        msg "relinking $i..."
        linkpkg $i
    done

    # clear any junk that may have came with the tarball
    msg 'making mrproper...'
    make mrproper

    # prompt use for their own custom config
    # if not provided, then we will use 'defconfig' followed
    # by 'menuconfig' to edit it.
    msg_no_nl 'Would you like to provide your own config? (y/n): '
    read -r ans
    case "$ans" in
        y|yes|"")
            msg_no_nl "Path to config: "
            read -r ans
            if [ -f "$ans" ] ; then
                cp -f "$ans" .config
            else
                die "$ans is not a valid file!"
            fi
            bonsai_make olddefconfig
            ;;
        *)
            msg "Ok. Creating defconfig instead..."
            bonsai_make defconfig
    esac

    msg_no_nl 'Would you like to edit the config? (y/n): '
    read -r ans
    case "$ans" in
        y|yes|"") bonsai_make menuconfig
    esac

    # set default hostname as distro name
    echo CONFIG_DEFAULT_HOSTNAME=bonsai >> .config

    # disable debug symbols in kernel (smaller kernel binary)
    sed 's|.*CONFIG_DEBUG_KERNEL.*|\# CONFIG_DEBUG_KERNEL (disabled by bonsai)|' .config > tmp
    mv -f tmp .config

    # auto enable inode number mapping
    echo 'CONFIG_OVERLAY_FS_XINO_AUTO=y' >> .config

    # uevent stuff for smdev
    echo 'CONFIG_HOTPLUG=y' >> .config
    echo 'CONFIG_DEVTMPFS=y' >> .config
    echo 'CONFIG_DEVTMPFS_MOUNT=y' >> .config
    echo 'CONFIG_UEVENT_HELPER=y' >> .config
    echo 'CONFIG_USB_DEVICE_CLASS=y' >> .config
    echo 'CONFIG_USB_DEVICEFS=y' >> .config
    echo 'CONFIG_INPUT_EVDEV=y' >> .config
    echo 'CONFIG_INOTIFY=y' >> .config

    # -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
    # Note: This method is slower than ORC, currently looking into
    #       getting libelf from elfutils to get around this.
    #
    # Use old frame pointer vs ORC to remove libelf/elfutils dependency.
    sed 's|.*CONFIG_UNWINDER_ORC=y.*|\# CONFIG_UNWINDER_ORC (disabled by bonsai)|' .config > tmp
    mv -f tmp .config
    sed 's|.*CONFIG_UNWINDER_FRAME_POINTER.*|CONFIG_UNWINDER_FRAME_POINTER=y|' .config > tmp
    mv -f tmp .config
    # -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

    # make directories for modules
    mkdir -p /lib/modules/$version /lib/firmware

    # sbase's ln does not have the -n flag which causes the
    # final symlink of the bzImage to fail.
    # however, this -n isn't actually needed. We can safely sed it out.
    sed 's|ln -fsn|ln -fs|' arch/x86/Makefile > tmp
    mv -f tmp arch/x86/Makefile

    # sbase's head does not have the -l flag
    # this script checks if the atomic headers have been modified.
    # bizarre to use head for this.... but as we are checksumming
    # the tarball we don't care anyway, nop the file.
    :> scripts/atomic/check-atomics.sh
}

build() {
    # note: yes "" | here is accept (NEW) defaults without prompting
    msg 'compiling kernel...'
    yes "" | bonsai_make \
        HOSTCFLAGS="-D_GNU_SOURCE $CFLAGS" \
        DISABLE_PAX_PLUGINS=y \
        bzImage

    msg 'compiling modules...'
    bonsai_make \
        HOSTCFLAGS="-D_GNU_SOURCE $CFLAGS" \
        DISABLE_PAX_PLUGINS=y \
        modules

    msg 'copying files to $PKGS/$name...'

    bonsai_make INSTALL_MOD_PATH=$pkg modules_install
    install -m 0644 .config $pkg/config
    install -m 0644 System.map $pkg/System.map
    install -m 0644 arch/x86/boot/bzImage $pkg/vmlinuz

    msg 'copying files to $ROOT/boot...'

    bonsai_make INSTALL_MOD_PATH=/ modules_install
    install -m 0644 .config /boot/config
    install -m 0644 System.map /boot/System.map
    install -m 0644 arch/x86/boot/bzImage /boot/vmlinuz
}
